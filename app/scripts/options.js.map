{"version":3,"sources":["../scripts.babel/options.js"],"names":[],"mappings":"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","file":"options.js","sourcesContent":["'use strict';\n\nlet $ = function(q) {\n  let result = document.querySelectorAll(q);\n  return result.length === 1 ? result[0] : result;\n};\nlet $new = tag => document.createElement(tag);\nlet bgJS = chrome.extension.getBackgroundPage();\nlet listEl = $('#folder-list');\nlet frag = document.createDocumentFragment();\n\n\n// Dom Generation\n\nfunction genFolderList( list = bgJS.folders, containerEl = frag ) {\n\n  list.forEach( folder => {\n\n    let li    = $new('li');\n    let label = $new('label');\n    let check = $new('input');\n    let span  = $new('span');\n\n    check.id = `folder-${folder.id}`;\n    check.value = folder.id;\n    check.setAttribute('type','checkbox');\n    check.checked = Boolean( list.find( id => id===folder.id ) );\n\n    span.textContent = folder.title;\n    label.appendChild(check);\n    label.appendChild(span);\n    li.appendChild(label);\n\n\n    if (folder.children) {\n\n      let ul = $new('ul');\n\n      genFolderList( folder.children, ul );\n      li.appendChild(ul);\n    }\n\n    containerEl.appendChild(li);\n  });\n}\n\nfunction toggleCheckboxUI( parentEl ) {\n\n  let descendants = [];\n  let parentLI = parentEl.parentNode.parentNode;\n  let arrayUL = [...parentLI.querySelectorAll('ul')];\n\n  arrayUL.forEach( ul => {\n    descendants.push( ... ul.querySelectorAll('input') );\n  });\n\n  for ( let i in descendants ) {\n    descendants[i].checked = parentEl.checked;\n  }\n}\n\n\n// Events\n\nfunction toggleFolder(input) {\n\n  chrome.runtime.sendMessage({\n    action: 'toggleFolder',\n    id: input.value,\n    isSelected: input.checked\n  });\n}\n\n\nlistEl.addEventListener('click', event => {\n\n  let possibleTargets = listEl.querySelectorAll('input');\n\n  for ( let index in possibleTargets )\n  {\n    let possibleTarget = possibleTargets[index];\n    let el = event.target;\n\n    while (el && el !== listEl)\n    {\n      if (el === possibleTarget)\n      {\n        toggleCheckboxUI(el);\n        toggleFolder(el);\n      }\n      el = el.parentNode;\n    }\n  }\n  \n});\n\n\n\n/*\n    Initialise\n    ==========\n*/\n\ngenFolderList();\nlistEl.appendChild(frag);\n"]}
{"version":3,"sources":["../scripts.babel/options.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,CAAC,GAAG,SAAJ,CAAC,CAAY,CAAC,EAAE;AAClB,MAAI,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAC1C,SAAO,MAAM,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;CACjD,CAAC;AACF,IAAI,IAAI,GAAG,SAAP,IAAI,CAAG,GAAG;SAAI,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;CAAA,CAAC;;AAE9C,SAAS,YAAY,CAAC,KAAK,EAAE;;AAE3B,QAAM,CAAC,OAAO,CAAC,WAAW,CAAC;AACzB,UAAM,EAAE,cAAc;AACtB,MAAE,EAAE,KAAK,CAAC,KAAK;AACf,cAAU,EAAE,KAAK,CAAC,OAAO;GAC1B,CAAC,CAAC;CACJ;;AAGD,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;AAChD,IAAI,MAAM,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC;AAC/B,IAAI,IAAI,GAAG,QAAQ,CAAC,sBAAsB,EAAE;;;AAAC,AAG7C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;;AAE7B,MAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1B,MAAI,IAAI,GAAI,IAAI,CAAC,MAAM,CAAC,CAAC;AACzB,MAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;;AAE1B,OAAK,CAAC,YAAY,CAAC,MAAM,EAAC,UAAU,CAAC,CAAC;AACtC,OAAK,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC;AACxB,OAAK,CAAC,OAAO,GAAG,OAAO,CAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,UAAA,EAAE;WAAI,EAAE,KAAG,MAAM,CAAC,EAAE;GAAA,CAAE,CAAE,CAAC;;AAEvE,MAAI,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;AAChC,OAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACzB,OAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;AAExB,MAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;CAEzB,CAAC,CAAC;;AAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,KAAK,EAAI;;AAExC,MAAI,eAAe,GAAG,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;;AAEvD,OAAM,IAAI,KAAK,IAAI,eAAe,EAClC;AACE,QAAI,cAAc,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAI,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;;AAEtB,WAAO,EAAE,IAAI,EAAE,KAAK,MAAM,EAC1B;AACE,UAAI,EAAE,KAAK,cAAc,EACzB;AACE,eAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAChB,oBAAY,CAAC,EAAE,CAAC,CAAC;OAClB;AACD,QAAE,GAAG,EAAE,CAAC,UAAU,CAAC;KACpB;GACF;CAEF,CAAC,CAAC;;AAEH,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC","file":"options.js","sourcesContent":["'use strict';\n\nlet $ = function(q) {\n  let result = document.querySelectorAll(q);\n  return result.length === 1 ? result[0] : result;\n};\nlet $new = tag => document.createElement(tag);\n\nfunction toggleFolder(input) {\n\n  chrome.runtime.sendMessage({\n    action: 'toggleFolder',\n    id: input.value,\n    isSelected: input.checked\n  });\n}\n\n\nlet bgJS = chrome.extension.getBackgroundPage();\nlet listEl = $('#folder-list');\nlet frag = document.createDocumentFragment();\n\n// create the checklist\nbgJS.folders.forEach(folder => {\n\n  let check = $new('input');\n  let span  = $new('span');\n  let label = $new('label');\n\n  check.setAttribute('type','checkbox');\n  check.value = folder.id;\n  check.checked = Boolean( bgJS.folderIDs.find( id => id===folder.id ) );\n\n  span.textContent = folder.title;\n  label.appendChild(check);\n  label.appendChild(span);\n\n  frag.appendChild(label);\n\n});\n\nlistEl.addEventListener('click', event => {\n\n  let possibleTargets = listEl.querySelectorAll('input');\n\n  for ( let index in possibleTargets )\n  {\n    let possibleTarget = possibleTargets[index];\n    let el = event.target;\n\n    while (el && el !== listEl)\n    {\n      if (el === possibleTarget)\n      {\n        console.log(el);\n        toggleFolder(el);\n      }\n      el = el.parentNode;\n    }\n  }\n  \n});\n\nlistEl.appendChild(frag);\n"]}
{"version":3,"sources":["../scripts.babel/background.js"],"names":[],"mappings":"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","file":"background.js","sourcesContent":["'use strict';\n\n/*\nlet startTime = new Date.now();\nlet currentMillis = today.getMilliseconds()\n*/\n\nconst TIME_DECR = 1000;\nconst AMBER_PERIOD = 120000; // 2 min\nconst RED_PERIOD = 60000; // 1 min\nconst COLORS = {\n  GREEN: '#00CC00', AMBER: '#FFC200', RED: '#FF0000'\n};\n\nlet currentTab;\nlet countdownID;\nlet tabRemovedByExtension;\n\nlet bookmarks = [];\nlet folders   = [];\nlet millis;\n\n\nfunction msToTime(ms) {\n  // to seconds\n  let secs = Math.floor( ms / 1000 );\n  let mins = Math.floor( secs / 60 );\n  let remainingSecs = (secs % 60) + '';\n  remainingSecs = remainingSecs.length === 2 ? remainingSecs : '0' + remainingSecs;\n\n  return mins + ':' + remainingSecs;\n}\n\nfunction filterBookmarks(nodeTree) {\n\n    nodeTree.forEach(bookmark => {\n      \n      if (bookmark.url)\n      {\n        bookmarks.push(bookmark);\n        console.log(bookmark);\n      }\n      else \n      {\n        folders.push(bookmark);\n      }\n\n      if (bookmark.children) {\n        filterBookmarks(bookmark.children);\n      }\n\n    });\n\n}\n\nfunction getRandomMark() {\n\n  let randomIndex = Math.floor( Math.random() * bookmarks.length );\n\n  //I don't think we need a while here\n    while (true) {\n      console.log(randomIndex);\n      if (bookmarks[randomIndex].url) {\n        return bookmarks[randomIndex];\n      }\n      else {\n        randomIndex = Math.floor( Math.random() * bookmarks.length );\n      }\n    }\n}\n\nfunction openBookmark() {\n\n  let timePeriod = millis;\n  let initialColor = timePeriod > AMBER_PERIOD ? 'GREEN' \n    : timePeriod > RED_PERIOD ? 'AMBER' : 'RED';\n\n  chrome.browserAction.setBadgeBackgroundColor({color: COLORS[initialColor] });\n\n  if ( timePeriod > AMBER_PERIOD ) {\n    setTimeout(function() {\n      chrome.browserAction.setBadgeBackgroundColor({color: COLORS.AMBER});\n    }, timePeriod - AMBER_PERIOD);\n  }\n  if ( timePeriod > RED_PERIOD ) {\n    setTimeout(function() {\n      chrome.browserAction.setBadgeBackgroundColor({color: COLORS.RED});\n    }, timePeriod - RED_PERIOD);\n  }\n\n  chrome.tabs.create({ url: getRandomMark().url }, tab => {\n    console.log(tab);\n    currentTab = tab;\n  });\n\n  // Initialise timer\n  countdownID = setInterval(function() {\n\n    timePeriod -= TIME_DECR;\n    chrome.browserAction.setBadgeText({ text: msToTime(timePeriod) });\n\n    if (timePeriod === 0)\n    {\n      chrome.tabs.remove(currentTab.id);\n      clearInterval(countdownID);\n    }\n\n  }, TIME_DECR );\n}\n\n\n\nchrome.runtime.onInstalled.addListener(details => {\n  console.log('previousVersion', details.previousVersion);\n});\n\nchrome.tabs.onRemoved.addListener(tabID => {\n\n  if (tabID === currentTab.id) {\n\n    clearInterval(countdownID);\n    chrome.browserAction.setBadgeText({ text: '' });\n    currentTab = undefined;\n\n    if (tabRemovedByExtension) {\n      openBookmark();\n      tabRemovedByExtension = false;\n    }\n  }\n});\n\n// chrome.runtime.onStartup.addListener(function() {\n  \n// });\n\nchrome.runtime.onMessage.addListener(request => { /*, sender*/\n\n  switch (request.action) {\n\n    case 'open':\n\n      millis = request.millis;\n\n      if (typeof currentTab === typeof {})\n      {\n        tabRemovedByExtension = true;\n        chrome.tabs.remove(currentTab.id); // destroy previous roulette tab, callback will openBookmark when ready\n      }\n      else\n      {\n        openBookmark();\n      }\n      break;\n\n    case 'loadBookmarks':\n      chrome.bookmarks.getTree(filterBookmarks);\n      break;\n  }\n\n});\n\n"]}
{"version":3,"sources":["../scripts.babel/background.js"],"names":[],"mappings":"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","file":"background.js","sourcesContent":["'use strict';\n\n\n/*\n    TODOs\n    =====\n    \n    At the moment this works for one tab only\n\n    [ ] Track which tabs were opened and have timers set perâ€“tab\n\n*/\n\n/*\nlet startTime = new Date.now();\nlet currentMillis = today.getMilliseconds()\n*/\n// const TIME_PERIOD = 180000; // 3 * 60 * 1000;\nconst TIME_DECR = 1000;\nconst AMBER_PERIOD = 120000; // 2 min\nconst RED_PERIOD = 60000; // 1 min\nconst COLORS = {\n  GREEN: '#00CC00', AMBER: '#FFC200', RED: '#FF0000'\n};\n\nfunction millToTime(millis) {\n  // to seconds\n  let secs = Math.floor( millis / 1000 );\n  let mins = Math.floor( secs / 60 );\n  let remainingSecs = (secs % 60) + '';\n  remainingSecs = remainingSecs.length === 2 ? remainingSecs : '0' + remainingSecs;\n\n  return mins + ':' + remainingSecs;\n}\n\n\nchrome.runtime.onInstalled.addListener(details => {\n  console.log('previousVersion', details.previousVersion);\n});\n\n/*\n    Run everytime a bookmark is launched\n    ------------------------------------\n*/\nchrome.runtime.onMessage.addListener(function(request/*, sender*/) {\n\n  console.log(request);\n\n  let timePeriod = request.millis;\n  let currentTab;\n  let countdownID;\n  let initialColor;\n\n  initialColor = timePeriod > AMBER_PERIOD ? 'GREEN' \n    : timePeriod > RED_PERIOD ? 'AMBER' : 'RED';\n\n  chrome.browserAction.setBadgeBackgroundColor({color: COLORS[initialColor] });\n\n  if ( timePeriod > AMBER_PERIOD ) {\n    setTimeout(function() { chrome.browserAction.setBadgeBackgroundColor({color: COLORS.AMBER}); }, timePeriod - AMBER_PERIOD);\n  }\n  if ( timePeriod > RED_PERIOD ) {\n      setTimeout(function() { chrome.browserAction.setBadgeBackgroundColor({color: COLORS.RED}); }, timePeriod - RED_PERIOD);\n  }\n\n  chrome.tabs.create({url: request.redirect}, tab => {\n    console.log(tab);\n    currentTab = tab;\n  });\n\n  chrome.tabs.onRemoved.addListener( tabID => {\n    if (tabID === currentTab.id)\n    {\n      // timePeriod = TIME_PERIOD;\n      clearInterval(countdownID);\n      chrome.browserAction.setBadgeText({ text: '' });\n    }\n  });\n\n  // Initialise timer\n  countdownID = setInterval(function() {\n\n    timePeriod -= TIME_DECR;\n    chrome.browserAction.setBadgeText({ text: millToTime(timePeriod) });\n\n    if (timePeriod === 0)\n    {\n      chrome.tabs.remove(currentTab.id);\n    }\n\n  }, TIME_DECR );\n\n});\n\n\n// console.log('\\'Allo \\'Allo! Event Page for Browser Action');"]}